{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\"; // api\n\n// components\nimport Layout from \"../../components/layout\";\n\nvar Article = function Article(_ref) {\n  var article = _ref.article,\n      categories = _ref.categories;\n  var imageUrl = article.image.url.startsWith(\"/\") ? process.env.API_URL + article.image.url : article.image.url;\n  return __jsx(Layout, {\n    categories: categories,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: \"banner\",\n    \"data-src\": imageUrl,\n    \"data-srcset\": imageUrl,\n    \"data-uk-img\": true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, article.title)), __jsx(ReactMarkdown, {\n    source: article.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Moment, {\n    format: \"MMM Do YYYY\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, article.published_at)));\n};\n\n_c = Article;\nexport var __N_SSG = true;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js"],"names":["ReactMarkdown","Moment","Layout","Article","article","categories","imageUrl","image","url","startsWith","process","env","API_URL","title","content","published_at"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AAGA;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC3C,MAAMC,QAAQ,GAAGF,OAAO,CAACG,KAAR,CAAcC,GAAd,CAAkBC,UAAlB,CAA6B,GAA7B,IACbC,OAAO,CAACC,GAAR,CAAYC,OAAZ,GAAsBR,OAAO,CAACG,KAAR,CAAcC,GADvB,GAEbJ,OAAO,CAACG,KAAR,CAAcC,GAFlB;AAGA,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEH,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,gBAAUC,QAA3B;AAAqC,mBAAaA,QAAlD;AAA4D,uBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACS,KAAb,CADF,CADF,EAKE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAET,OAAO,CAACU,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BV,OAAO,CAACW,YAAtC,CADF,CANF,CADF;AAYD,CAhBD;;KAAMZ,O;;AAuCN,eAAeA,OAAf","sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\n\n// api\nimport { getArticles, getArticle, getCategories } from \"../../lib/api\";\n\n// components\nimport Layout from \"../../components/layout\";\n\nconst Article = ({ article, categories }) => {\n  const imageUrl = article.image.url.startsWith(\"/\")\n    ? process.env.API_URL + article.image.url\n    : article.image.url;\n  return (\n    <Layout categories={categories}>\n      <div id=\"banner\" data-src={imageUrl} data-srcset={imageUrl} data-uk-img>\n        <h1>{article.title}</h1>\n      </div>\n\n      <ReactMarkdown source={article.content} />\n      <p>\n        <Moment format=\"MMM Do YYYY\">{article.published_at}</Moment>\n      </p>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const articles = (await getArticles()) || [];\n  return {\n    paths: articles.map((article) => ({\n      params: {\n        id: article.id\n      }\n    })),\n    fallback: false\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const article = (await getArticle(params.id)) || [];\n  const categories = (await getCategories()) || [];\n  return {\n    props: { article, categories },\n    unstable_revalidate: 1\n  };\n}\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}