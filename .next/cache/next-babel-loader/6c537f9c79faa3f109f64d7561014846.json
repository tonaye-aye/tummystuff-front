{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\"; // api\n\nimport { getArticles, getArticle, getCategories } from \"../../lib/api\"; // components\n\nimport Layout from \"../../components/layout\";\nimport Title from \"../../components/title\";\n\nconst Article = ({\n  article,\n  categories\n}) => {\n  const imageUrl = article.image.url.startsWith(\"/\") ? process.env.API_URL + article.image.url : article.image.url;\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: \"banner\",\n    \"data-src\": imageUrl,\n    \"data-srcset\": imageUrl,\n    \"data-uk-img\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), __jsx(Title, {\n    title: article.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    image: imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Lizard\"), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    source: article.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Moment, {\n    format: \"MMM Do YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, article.published_at)), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Share\"), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Learn More\"))));\n};\n\nexport async function getStaticPaths() {\n  const articles = (await getArticles()) || [];\n  return {\n    paths: articles.map(article => ({\n      params: {\n        id: article.id\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const article = (await getArticle(params.id)) || [];\n  const categories = (await getCategories()) || [];\n  return {\n    props: {\n      article,\n      categories\n    },\n    unstable_revalidate: 1\n  };\n}\nexport default Article;","map":{"version":3,"sources":["/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js"],"names":["ReactMarkdown","Moment","getArticles","getArticle","getCategories","Layout","Title","Article","article","categories","imageUrl","image","url","startsWith","process","env","API_URL","title","classes","root","content","published_at","getStaticPaths","articles","paths","map","params","id","fallback","getStaticProps","props","unstable_revalidate"],"mappings":"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","sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\n\n// api\nimport { getArticles, getArticle, getCategories } from \"../../lib/api\";\n\n// components\nimport Layout from \"../../components/layout\";\nimport Title from \"../../components/title\";\n\nconst Article = ({ article, categories }) => {\n  const imageUrl = article.image.url.startsWith(\"/\")\n    ? process.env.API_URL + article.image.url\n    : article.image.url;\n  return (\n    <Layout categories={categories}>\n      <div id=\"banner\" data-src={imageUrl} data-srcset={imageUrl} data-uk-img>\n        <h1></h1>\n      </div>\n\n      <Title title={article.title} />\n      <Card className={classes.root}>\n        <CardMedia component=\"img\" image={imageUrl} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            <ReactMarkdown source={article.content} />\n          </Typography>\n        </CardContent>\n        <p>\n          <Moment format=\"MMM Do YYYY\">{article.published_at}</Moment>\n        </p>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const articles = (await getArticles()) || [];\n  return {\n    paths: articles.map((article) => ({\n      params: {\n        id: article.id\n      }\n    })),\n    fallback: false\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const article = (await getArticle(params.id)) || [];\n  const categories = (await getCategories()) || [];\n  return {\n    props: { article, categories },\n    unstable_revalidate: 1\n  };\n}\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}