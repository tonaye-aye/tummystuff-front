{"ast":null,"code":"var _jsxFileName = \"/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\"; // packages\n\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\"; // api\n\nimport { getArticles, getArticle, getCategories } from \"../../lib/api\"; // components\n\nimport Layout from \"../../components/layout\";\nimport Title from \"../../components/title\"; // material ui\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 300\n  },\n  card: {\n    margin: \"1.5rem 0 0\"\n  }\n}));\n\nconst Article = ({\n  article,\n  articles,\n  categories\n}) => {\n  const classes = useStyles();\n  const recentArticles = articles.split(0, 5);\n  const imageUrl = article.image.url.startsWith(\"/\") ? process.env.API_URL + article.image.url : article.image.url;\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    title: article.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    image: imageUrl,\n    className: classes.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), __jsx(CardContent, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    fontStyle: \"italic\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(Moment, {\n    format: \"MMM Do YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, article.published_at)), \" \", \"|\", \" \", __jsx(Box, {\n    fontWeight: \"fontWeightBold\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, article.category.name)), __jsx(Box, {\n    m: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }), __jsx(Divider, {\n    light: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    fontFamily: \"fontFamily\",\n    lineHeight: 1.6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, __jsx(ReactMarkdown, {\n    source: article.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Back\"))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"overline\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Other posts\"), __jsx(Divider, {\n    light: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), recentArticles.map(article => {\n    return __jsx(MenuItem, {\n      key: article.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      as: `/article/${article.id}`,\n      href: \"/article/[id]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"button\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, article.title.slice(0, 14), \"...\")));\n  }), __jsx(Box, {\n    m: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), __jsx(Typography, {\n    variant: \"overline\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Topics\"), __jsx(Divider, {\n    light: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), categories.map(category => {\n    return __jsx(MenuItem, {\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, __jsx(Link, {\n      as: `/category/${category.id}`,\n      href: \"/category/[id]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"button\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, category.name)));\n  }))));\n};\n\nexport async function getStaticPaths() {\n  const articles = (await getArticles()) || [];\n  return {\n    paths: articles.map(article => ({\n      params: {\n        id: article.id\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const article = (await getArticle(params.id)) || [];\n  const categories = (await getCategories()) || [];\n  return {\n    props: {\n      article,\n      categories\n    },\n    unstable_revalidate: 1\n  };\n}\nexport default Article;","map":{"version":3,"sources":["/Users/tony/Developer/Web/_Sandbox/my-blog/blog-frontend/pages/article/[id].js"],"names":["React","Link","ReactMarkdown","Moment","getArticles","getArticle","getCategories","Layout","Title","makeStyles","Box","Button","Divider","Card","CardActions","CardContent","CardMedia","Grid","MenuItem","Typography","useStyles","theme","media","height","card","margin","Article","article","articles","categories","classes","recentArticles","split","imageUrl","image","url","startsWith","process","env","API_URL","title","root","published_at","category","name","content","map","id","slice","getStaticPaths","paths","params","fallback","getStaticProps","props","unstable_revalidate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n\n// packages\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\n\n// api\nimport { getArticles, getArticle, getCategories } from \"../../lib/api\";\n\n// components\nimport Layout from \"../../components/layout\";\nimport Title from \"../../components/title\";\n\n// material ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 300\n  },\n  card: {\n    margin: \"1.5rem 0 0\"\n  }\n}));\n\nconst Article = ({ article, articles, categories }) => {\n  const classes = useStyles();\n\n  const recentArticles = articles.split(0, 5);\n\n  const imageUrl = article.image.url.startsWith(\"/\")\n    ? process.env.API_URL + article.image.url\n    : article.image.url;\n\n  return (\n    <Layout categories={categories}>\n      <Title title={article.title} />\n      <Grid container spacing={3} className={classes.root}>\n        <Grid item xs={12} md={10}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={imageUrl}\n              className={classes.media}\n            />\n            <CardContent className={classes.card}>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <Box fontStyle=\"italic\" component=\"span\">\n                  <Moment format=\"MMM Do YYYY\">{article.published_at}</Moment>\n                </Box>{\" \"}\n                |{\" \"}\n                <Box fontWeight=\"fontWeightBold\" component=\"span\">\n                  {article.category.name}\n                </Box>\n              </Typography>\n              <Box m={2} />\n              <Divider light={true} />\n              <Box fontFamily=\"fontFamily\" lineHeight={1.6}>\n                <ReactMarkdown source={article.content} />\n              </Box>\n            </CardContent>\n            <CardActions>\n              <Link href=\"/\">\n                <Button>Back</Button>\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={2}>\n          <Typography variant=\"overline\" color=\"textSecondary\" component=\"p\">\n            Other posts\n          </Typography>\n          <Divider light={true} />\n          <Box m={1} />\n          {recentArticles.map((article) => {\n            return (\n              <MenuItem key={article.id}>\n                <Link as={`/article/${article.id}`} href=\"/article/[id]\">\n                  <Typography variant=\"button\" component=\"p\">\n                    {article.title.slice(0, 14)}...\n                  </Typography>\n                </Link>\n              </MenuItem>\n            );\n          })}\n          <Box m={4} />\n          <Typography variant=\"overline\" color=\"textSecondary\" component=\"p\">\n            Topics\n          </Typography>\n          <Divider light={true} />\n          <Box m={1} />\n          {categories.map((category) => {\n            return (\n              <MenuItem key={category.id}>\n                <Link as={`/category/${category.id}`} href=\"/category/[id]\">\n                  <Typography variant=\"button\" component=\"p\">\n                    {category.name}\n                  </Typography>\n                </Link>\n              </MenuItem>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const articles = (await getArticles()) || [];\n  return {\n    paths: articles.map((article) => ({\n      params: {\n        id: article.id\n      }\n    })),\n    fallback: false\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const article = (await getArticle(params.id)) || [];\n  const categories = (await getCategories()) || [];\n  return {\n    props: { article, categories },\n    unstable_revalidate: 1\n  };\n}\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}